server.port=8080
spring.application.name=api-gateway

# Enable CORS if needed
# (You can also do this via a Java @Configuration class)
# spring.cloud.gateway.globalcors.corsConfigurations.[/].allowedOrigins=http://localhost:3000
# spring.cloud.gateway.globalcors.corsConfigurations.[/].allowedMethods=GET,POST,PUT,DELETE

# Service Routing (only if using Spring Cloud Gateway)
spring.cloud.gateway.routes[0].id=order-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/orders/**

spring.cloud.gateway.routes[1].id=inventory-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/inventory/**

spring.cloud.gateway.routes[2].id=payment-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/payments/**

spring.cloud.gateway.routes[3].id=user-service
spring.cloud.gateway.routes[3].uri=http://localhost:8086
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/users/**

spring.cloud.gateway.routes[4].id=product-service
spring.cloud.gateway.routes[4].uri=http://localhost:8087
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/products/**

spring.cloud.gateway.routes[5].id=websocket-service
spring.cloud.gateway.routes[5].uri=http://localhost:8088
spring.cloud.gateway.routes[5].predicates[0]=Path=/ws/**
